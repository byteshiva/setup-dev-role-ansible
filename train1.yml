- hosts: consulserver
  tags: so5
  gather_facts: False
  vars: [
      k1: 'key1',
      k2: 'key2',
      d1: "{
        '{{k1}}': 'value1',
        '{{k2}}': 'value2',
      }",
    ]
  vars: {"services": [
      {
        "id": "Encryption",
        "name": "Encryption",
        "tags": [
          "Encryption"
        ],
        "port": 5001,
        "checks": [
          {
            "name": "Encryption TCP on port 5001",
            "id": "Encryption",
            "tcp": "localhost:5001",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "ResorceResolver",
        "name": "ResorceResolver",
        "tags": [
          "ResorceResolver"
        ],
        "port": 5001,
        "checks": [
          {
            "name": "ResorceResolver TCP on port 3001",
            "id": "ResorceResolver",
            "tcp": "localhost:3001",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "Idproxy",
        "name": "Idproxy",
        "tags": [
          "Idproxy"
        ],
        "port": 4000,
        "checks": [
          {
            "name": "Idproxy TCP on port 4000",
            "id": "Idproxy",
            "tcp": "localhost:4000",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "AppServer",
        "name": "AppServer",
        "tags": [
          "AppServer"
        ],
        "port": 3000,
        "checks": [
          {
            "name": "AppServer TCP on port 3000",
            "id": "AppServer",
            "tcp": "localhost:3000",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "KeyServer",
        "name": "KeyServer",
        "tags": [
          "KeyServer"
        ],
        "port": 3002,
        "checks": [
          {
            "name": "KeyServer TCP on port 3002",
            "id": "KeyServer",
            "tcp": "localhost:3002",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "AlertRouter",
        "name": "AlertRouter",
        "tags": [
          "AlertRouter"
        ],
        "port": 5673,
        "checks": [
          {
            "name": "AlertRouter TCP on port 5673",
            "id": "AlertRouter",
            "tcp": "localhost:5673",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "BotRTMServer",
        "name": "BotRTMServer",
        "tags": [
          "BotRTMServer"
        ],
        "port": 9091,
        "checks": [
          {
            "name": "BotRTMServer TCP on port 9091",
            "id": "BotRTMServer",
            "tcp": "localhost:9091",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "AuthServer",
        "name": "AuthServer",
        "tags": [
          "AuthServer"
        ],
        "port": 3030,
        "checks": [
          {
            "name": "AuthServer TCP on port 3030",
            "id": "AuthServer",
            "tcp": "localhost:3030",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      },
      {
        "id": "Webhook",
        "name": "Webhook",
        "tags": [
          "Webhook"
        ],
        "port": 3031,
        "checks": [
          {
            "name": "Webhook TCP on port 3031",
            "id": "Webhook",
            "tcp": "localhost:3031",
            "interval": "10s",
            "timeout": "1s"
          }
        ]
      }
    ]
  }
  #consul_services:
  #   - service:
  #       name: "consulweb"
  #       tags:
  #         - "consulwebport80"
  #       address: "127.0.0.1"
  #       port: 80
  #       checks:
  #         - name: "webhealthcheck"
  #           interval: "10s"
  #           timeout: "1s"
  #           script: "curl localhost >/dev/null 2>&1"

  tasks:
    - debug: msg="{{item}}"
      with_dict: services
